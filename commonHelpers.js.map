{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  element: document.querySelector('#datetime-picker'),\n  btn: document.querySelector('[data-start]'),\n  value: document.querySelectorAll('.value'),\n};\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    refs.btn.removeAttribute('disabled');\n  },\n};\nflatpickr(refs.element, options);\nlet currentTime = new Date();\n\nrefs.btn.addEventListener('click', e => {\n  if (userSelectedDate <= currentTime) {\n    return iziToast.error({\n      message: 'Please choose a date in the future',\n      backgroundColor: 'red',\n      messageColor: '#fff',\n      position: 'bottomLeft',\n      icon: 'icon-cancel-circle',\n      close: false,\n    });\n  }\n  timer(userSelectedDate);\n  console.log();\n  refs.btn.disabled = true;\n  refs.element.disabled = true;\n});\n\nconst timer = date => {\n  setInterval(() => {\n    const currentTime = new Date();\n    const timeLeft = date - currentTime;\n    renderTime(timeLeft);\n  }, 1000);\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction time2Str({ days, hours, minutes, seconds }) {\n  days = days.toString().padStart(2, '0');\n  hours = hours.toString().padStart(2, '0');\n  minutes = minutes.toString().padStart(2, '0');\n  seconds = seconds.toString().padStart(2, '0');\n  refs.value[0].textContent = days;\n  refs.value[1].textContent = hours;\n  refs.value[2].textContent = minutes;\n  refs.value[3].textContent = seconds;\n}\n\nfunction renderTime(ms) {\n  const parsedTime = convertMs(ms);\n  time2Str(parsedTime);\n}\n"],"names":["refs","userSelectedDate","options","selectedDates","flatpickr","currentTime","e","iziToast","timer","date","timeLeft","renderTime","convertMs","ms","days","hours","minutes","seconds","time2Str","parsedTime"],"mappings":"+IAOA,MAAMA,EAAO,CACX,QAAS,SAAS,cAAc,kBAAkB,EAClD,IAAK,SAAS,cAAc,cAAc,EAC1C,MAAO,SAAS,iBAAiB,QAAQ,CAC3C,EAEA,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCH,EAAK,IAAI,gBAAgB,UAAU,CACpC,CACH,EACAI,EAAUJ,EAAK,QAASE,CAAO,EAC/B,IAAIG,EAAc,IAAI,KAEtBL,EAAK,IAAI,iBAAiB,QAASM,GAAK,CACtC,GAAIL,GAAoBI,EACtB,OAAOE,EAAS,MAAM,CACpB,QAAS,qCACT,gBAAiB,MACjB,aAAc,OACd,SAAU,aACV,KAAM,qBACN,MAAO,EACb,CAAK,EAEHC,EAAMP,CAAgB,EACtB,QAAQ,IAAG,EACXD,EAAK,IAAI,SAAW,GACpBA,EAAK,QAAQ,SAAW,EAC1B,CAAC,EAED,MAAMQ,EAAQC,GAAQ,CACpB,YAAY,IAAM,CAEhB,MAAMC,EAAWD,EADG,IAAI,KAExBE,EAAWD,CAAQ,CACpB,EAAE,GAAI,CACT,EAEA,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAS,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACnDH,EAAOA,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EACtCC,EAAQA,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EACxCC,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5CC,EAAUA,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC5CjB,EAAK,MAAM,CAAC,EAAE,YAAcc,EAC5Bd,EAAK,MAAM,CAAC,EAAE,YAAce,EAC5Bf,EAAK,MAAM,CAAC,EAAE,YAAcgB,EAC5BhB,EAAK,MAAM,CAAC,EAAE,YAAciB,CAC9B,CAEA,SAASN,EAAWE,EAAI,CACtB,MAAMM,EAAaP,EAAUC,CAAE,EAC/BK,EAASC,CAAU,CACrB"}